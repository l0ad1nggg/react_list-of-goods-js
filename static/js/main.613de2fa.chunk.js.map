{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","IS_SORTED_A","IS_SORTED_R","App","useState","isSorted","setIsSorted","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAc,IAEdC,EAAc,IA0Bb,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA1BR,SAA0BC,EAA1B,GAAgD,IAAbH,EAAY,EAAZA,SAC3BI,EAAa,YAAOD,GAE1B,OAAQH,GACN,KAAKJ,EACHQ,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MAEF,IAXgB,IAYdH,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAC1D,MAEF,KAAKZ,EACHO,EAAcM,UAQlB,OAAON,EAKcO,CAAiBhB,EAAiB,CAAEK,aAEzD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYd,IAAaJ,IAE3BmB,QAAS,kBAAMd,EAAYL,IAL7B,iCAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WA/CQ,MA+CId,IAEde,QAAS,kBAAMd,EAjDL,MA4CZ,4BAUA,wBACEY,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYd,IAAaH,IAE3BkB,QAAS,kBAAMd,EAAYD,IAAaH,GAClCG,IAAaJ,GAAeI,IAAaH,EAC3C,GAAKA,IAPX,qBAYc,KAAbG,GACC,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAMd,EAAY,KAH7B,sBAUJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YChGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.613de2fa.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst IS_SORTED_A = 'A';\nconst IS_SORTED_L = 'L';\nconst IS_SORTED_R = 'R';\n\nfunction getPreparedGoods(goods, { isSorted }) {\n  const preparedGoods = [...goods];\n\n  switch (isSorted) {\n    case IS_SORTED_A:\n      preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case IS_SORTED_L:\n      preparedGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    case IS_SORTED_R:\n      preparedGoods.reverse();\n      break;\n\n    default:\n\n      break;\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [isSorted, setIsSorted] = useState('');\n  const visibleGoods = getPreparedGoods(goodsFromServer, { isSorted });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': isSorted !== IS_SORTED_A,\n          })}\n          onClick={() => setIsSorted(IS_SORTED_A)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': isSorted !== IS_SORTED_L,\n          })}\n          onClick={() => setIsSorted(IS_SORTED_L)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': isSorted !== IS_SORTED_R,\n          })}\n          onClick={() => setIsSorted(isSorted === IS_SORTED_R\n            || (isSorted === IS_SORTED_A && isSorted === IS_SORTED_R)\n            ? '' : IS_SORTED_R)}\n        >\n          Reverse\n        </button>\n\n        {isSorted !== '' && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => setIsSorted('')}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}